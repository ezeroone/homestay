@model eResorts.Models.HotelSearchModel

@{
    ViewBag.Title = "Search Hotels ...";
    Layout = "~/Views/Shared/_Layout.cshtml";
    
}
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Search Hotels ...</title>
    
          <script src="@Url.Content("~/Scripts/jquery-1.7.2.min.js")" type="text/javascript"></script>
            <script src="@Url.Content("~/Scripts/jquery-ui-1.8.24.min.js")" type="text/javascript"></script>

    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
        <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("http://www.google.com/jsapi?autoload={'modules':[{name:'maps',version:3,other_params:'sensor=false'}]}")" type="text/javascript"></script>
<script type="text/javascript">
    var infoList = [];
    $(document).ready(function () {
        
        $('#btnSearch').click(function () {

            //alert("hi");
            if ($('#txtPriceTo').val() < $('#txtPriceFrom').val()) {
                $('#errBox').html('Invalid price Range..');
                return;
            }
            $('#errBox').html('');
            var inputvalues = $('#frmHotelSearch').serialize();

            var selectedPOI = new Array();
            $(".poi:checked").each(function () {
                selectedPOI.push($(this).attr('name'));
            });

            var selectedFeatures = new Array();
            $(".feature:checked").each(function () {
                selectedFeatures.push($(this).attr('name'));
            });

            var dataPost = { filter: inputvalues, poiList: selectedPOI, featureList: selectedFeatures };

            $.post('/Property/GetFilteredHotelData/', inputvalues + '&poiList=' + selectedPOI + '&featureList=' + selectedFeatures, function (data) {
                
                LoadHotelsMap(data.city, data.hotels, data.radius);
                $("#tblhotels tr").remove();
                $("#tblhotels").append("<tr><th>Name<th><th>Address<th><th>Street<th><th>Price<th>");
                $.each(data.hotels, function (index, item) {
                    
                    var table = $(this);

                    $.each(table, function () { 
                        $("#tblhotels").append("<tr><td>" + this.Name +"</td>" +
                            "<td>" + this.Adderss + "</td>" +
                            "<td>" + this.Street + "</td>" +
                            "<td>" + this.DisplayPrice + "</td></tr>" 
                        );

                    });
                });

            });


        });


        $(".price").keydown(function (event) {


            if (event.shiftKey == true) {
                event.preventDefault();
            }

            if ((event.keyCode >= 48 && event.keyCode <= 57) || (event.keyCode >= 96 && event.keyCode <= 105) || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 37 || event.keyCode == 39 || event.keyCode == 46 || event.keyCode == 190) {

            } else {
                event.preventDefault();
            }

            if ($(this).val().indexOf('.') !== -1 && event.keyCode == 190)
                event.preventDefault();


        });

        $(".price").keyup(function () {

            if ($(this).val().indexOf('.') != -1) {
                if ($(this).val().split(".")[1].length > 2) {
                    if (isNaN(parseFloat(this.value))) return;
                    this.value = parseFloat(this.value - 0.005).toFixed(2);
                }
            }
            return this; //for chaining

        });

    });

    function LoadHotelsMap(city, hotels,radius) {
        
        var mapDiv = document.getElementById('hotel-map');
        var distance = radius * 1609.3;

        var map = new google.maps.Map(mapDiv, {
            center: new google.maps.LatLng(city.Latitude, city.Longitude),
            zoom: 5,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        });

        var markerCity = new google.maps.Marker({
            map: map,
            position: new google.maps.LatLng(city.Latitude, city.Longitude),
            title: city.Name
        });

        var circle = new google.maps.Circle({
            map: map,
            radius: distance,
            strokeColor: "#0054a8",
            strokeWeight: 1,
            fillColor: "#0054a8"
        });
        circle.bindTo('center', markerCity, 'position');
        map.fitBounds(circle.getBounds());

        if (hotels.length > 0) {

            //var bounds = new google.maps.LatLngBounds();
            //bounds.extend(new google.maps.LatLng(city.Latitude, city.Longitude));

            for (var i = 0; i < hotels.length; i++) {

                if (hotels[i].Latitude != null && hotels[i].Longitude != null) {
                    var marker = new google.maps.Marker({
                        map: map,
                        position: new google.maps.LatLng(hotels[i].Latitude, hotels[i].Longitude),
                        title: hotels[i].Name
                    });

                    //bounds.extend(new google.maps.LatLng(hotels[i].Latitude, hotels[i].Longitude));
                    var content = "Name:" + hotels[i].Name + "<br>Address:" + hotels[i].Adderss + "<br>Street:" + hotels[i].Street + "<br>Price:" + hotels[i].DisplayPrice;
                    //alert(content);
                    marker.infoWindow = new google.maps.InfoWindow({
                        content: content
                    });
                    google.maps.event.addListener(marker, "click", function () {

                        InfoClose();
                        infoList.push(this);
                        this.infoWindow.open(map, this);
                    });

                    var iconFile = 'http://maps.google.com/mapfiles/ms/icons/green-dot.png';
                    marker.setIcon(iconFile);


                }

            }
           
        }


    }

    function InfoClose() {
        ///////////////////////////////////////////////////////////
        // this routine will close an open infowindow when a new point is clicked
        // maps V.3 does not automatically do this for you anymore so we do it here
        if (!infoList.length) { return; }
        for (i in infoList) {
            infoList[i].infoWindow.close();
        }

        infoList = [];

    } // infoClose

</script>

    </head>
<body>

    	<div class="well">
        <div class="container-fluid" id="container">
<div class="row-fluid">
       <div class="span12">
                  <div class="form-horizontal" > 
@using (Html.BeginForm("", "", FormMethod.Post, new { id = "frmHotelSearch", name = "frmHotelSearch", area = "" }))
{
    @Html.ValidationSummary(true)
    @*<label for="lblErrorMessage" class="field-validation-error" />
    


*@<div>
                 <div class="control-group">
                          <div class="control-label">
                              <label>Location :</label>
                          </div>
		            <div class="controls">

                         @Html.DropDownListFor(model => model.LocationId, (SelectList)ViewBag.LocationList, new { @class = "input-xlarge" })
                    </div>
		        </div> 
             <div class="control-group">
                          <div class="control-label">
                              <label>Radius :</label>
                          </div>
		            <div class="controls">

                         @Html.DropDownListFor(model => model.Radius, (SelectList)ViewBag.RadiusList, new { @class = "input-xlarge" })
                    </div>
		        </div> 

                      <div class="control-group">
                          <div class="control-label">
                              <label>Accomodation Type:</label>
                          </div>
                            <div class="controls">

                               @Html.DropDownListFor(model => model.AccomodationTypeId, (SelectList)ViewBag.AccomodationTypeList, new { @class = "input-xlarge" })
                        </div>
                      </div> 

    <div class="control-group">
                     <div class="control-label">
                            <label>Accomodation Standard :</label>
                         </div>
                    <div class="controls">
                       @Html.DropDownListFor(model => model.AccomodationStandardId, (SelectList)ViewBag.AccomodationStandardList, new { @class = "input-xlarge" })
                    </div>
                 </div>  


                 <div class="control-group">
                     <div class="control-label">
                            <label>Rooms :</label>
                         </div>
                    <div class="controls">
                       @Html.DropDownListFor(model => model.No_ofRooms, (SelectList)ViewBag.RoomList, new { @class = "input-xlarge" })
                    </div>
                 </div>  

     <div class="control-group">
                     <div class="control-label">
                            <label>Price Range :</label>
                         </div>
                    <div class="controls">

                        @Html.TextBoxFor(model => model.PriceFrom, new {  @class = "price", id = "txtPriceFrom" })
                    </div>
                 </div>  

    <div class="control-group">
                     <div class="control-label">
                            <label>To :</label>
                         </div>
                    <div class="controls">

                        @Html.TextBoxFor(model => model.PriceTo, new {  @class = "price", id = "txtPriceTo" })
                    </div>
                 </div>  



     <div class="control-group">
                     <div class="control-label">
                            <label>Points of Interest :</label>
                         </div>
                    <div class="controls">
                        @foreach (var item in (List<eResorts.Models.PointOfInterest>)ViewBag.POTList)
                        {
                            @Html.CheckBox(item.Name, new { id=item.Id ,@class = "poi" }) @item.Name
                        }
                    </div>
                 </div>  

     <div class="control-group">
                     <div class="control-label">
                            <label>Features :</label>
                         </div>
                    <div class="controls">
                       @foreach (var item in (List<eResorts.Models.Features>)ViewBag.FeatureList)
                       {
                           @Html.CheckBox(item.Name, new { id = item.Id, @class = "feature"})  @item.Name
                       }
                    </div>
                 </div>  
                 
    
    <input type="button" value="Search" class="btn btn-primary" id="btnSearch" />

            </div>
    
}
                       </div>
 </div>
    <div id="errBox"></div>
         </div>
            <div id="hotel-map" style="height: 400px; width: 400px"></div>

            <div id="hotel-detailList">
                <table id="tblhotels"></table>
            </div>
             </div>
         </div>
 <script type="text/javascript">
     $(document).ready(function () {

         $.validator.unobtrusive.parse("#frmHotelSearch");

         
     });
    </script>
</body>
</html>